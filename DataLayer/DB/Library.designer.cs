#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataLayer.DB
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
    using DataLayer.API;

    [global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Database1")]
	public partial class LibraryDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBook(IBook instance);
    partial void UpdateBook(IBook instance);
    partial void DeleteBook(IBook instance);
    partial void InsertEmployee(Employee instance);
    partial void UpdateEmployee(Employee instance);
    partial void DeleteEmployee(Employee instance);
    partial void InsertEvent_BookAcquisition(Event_BookAcquisition instance);
    partial void UpdateEvent_BookAcquisition(Event_BookAcquisition instance);
    partial void DeleteEvent_BookAcquisition(Event_BookAcquisition instance);
    partial void InsertEvent_BookDeletion(Event_BookDeletion instance);
    partial void UpdateEvent_BookDeletion(Event_BookDeletion instance);
    partial void DeleteEvent_BookDeletion(Event_BookDeletion instance);
    partial void InsertEvent_RentsReturn(Event_RentsReturn instance);
    partial void UpdateEvent_RentsReturn(Event_RentsReturn instance);
    partial void DeleteEvent_RentsReturn(Event_RentsReturn instance);
    partial void InsertReader(Reader instance);
    partial void UpdateReader(Reader instance);
    partial void DeleteReader(Reader instance);
    partial void InsertSupplier(Supplier instance);
    partial void UpdateSupplier(Supplier instance);
    partial void DeleteSupplier(Supplier instance);
    #endregion
		
		public LibraryDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LibraryDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LibraryDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LibraryDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<IBook> Books
		{
			get
			{
				return this.GetTable<IBook>();
			}
		}
		
		public System.Data.Linq.Table<Employee> Employees
		{
			get
			{
				return this.GetTable<Employee>();
			}
		}
		
		public System.Data.Linq.Table<Event_BookAcquisition> Event_BookAcquisitions
		{
			get
			{
				return this.GetTable<Event_BookAcquisition>();
			}
		}
		
		public System.Data.Linq.Table<Event_BookDeletion> Event_BookDeletions
		{
			get
			{
				return this.GetTable<Event_BookDeletion>();
			}
		}
		
		public System.Data.Linq.Table<Event_RentsReturn> Event_RentsReturns
		{
			get
			{
				return this.GetTable<Event_RentsReturn>();
			}
		}
		
		public System.Data.Linq.Table<Reader> Readers
		{
			get
			{
				return this.GetTable<Reader>();
			}
		}
		
		public System.Data.Linq.Table<Supplier> Suppliers
		{
			get
			{
				return this.GetTable<Supplier>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Books")]
	public partial class IBook : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _BookId;
		
		private string _Title;
		
		private string _Author;
		
		private string _Publisher;
		
		private string _Category;
		
		private bool _Available;
		
		private EntitySet<Event_BookAcquisition> _Event_BookAcquisitions;
		
		private EntitySet<Event_BookDeletion> _Event_BookDeletions;
		
		private EntitySet<Event_RentsReturn> _Event_RentsReturns;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBookIdChanging(string value);
    partial void OnBookIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnAuthorChanging(string value);
    partial void OnAuthorChanged();
    partial void OnPublisherChanging(string value);
    partial void OnPublisherChanged();
    partial void OnCategoryChanging(string value);
    partial void OnCategoryChanged();
    partial void OnAvailableChanging(bool value);
    partial void OnAvailableChanged();
    #endregion
		
		public IBook()
		{
			this._Event_BookAcquisitions = new EntitySet<Event_BookAcquisition>(new Action<Event_BookAcquisition>(this.attach_Event_BookAcquisitions), new Action<Event_BookAcquisition>(this.detach_Event_BookAcquisitions));
			this._Event_BookDeletions = new EntitySet<Event_BookDeletion>(new Action<Event_BookDeletion>(this.attach_Event_BookDeletions), new Action<Event_BookDeletion>(this.detach_Event_BookDeletions));
			this._Event_RentsReturns = new EntitySet<Event_RentsReturn>(new Action<Event_RentsReturn>(this.attach_Event_RentsReturns), new Action<Event_RentsReturn>(this.detach_Event_RentsReturns));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookId", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string BookId
		{
			get
			{
				return this._BookId;
			}
			set
			{
				if ((this._BookId != value))
				{
					this.OnBookIdChanging(value);
					this.SendPropertyChanging();
					this._BookId = value;
					this.SendPropertyChanged("BookId");
					this.OnBookIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Author", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Author
		{
			get
			{
				return this._Author;
			}
			set
			{
				if ((this._Author != value))
				{
					this.OnAuthorChanging(value);
					this.SendPropertyChanging();
					this._Author = value;
					this.SendPropertyChanged("Author");
					this.OnAuthorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Publisher", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Publisher
		{
			get
			{
				return this._Publisher;
			}
			set
			{
				if ((this._Publisher != value))
				{
					this.OnPublisherChanging(value);
					this.SendPropertyChanging();
					this._Publisher = value;
					this.SendPropertyChanged("Publisher");
					this.OnPublisherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Available", DbType="Bit NOT NULL")]
		public bool Available
		{
			get
			{
				return this._Available;
			}
			set
			{
				if ((this._Available != value))
				{
					this.OnAvailableChanging(value);
					this.SendPropertyChanging();
					this._Available = value;
					this.SendPropertyChanged("Available");
					this.OnAvailableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Book_Event_BookAcquisition", Storage="_Event_BookAcquisitions", ThisKey="BookId", OtherKey="BookId")]
		public EntitySet<Event_BookAcquisition> Event_BookAcquisitions
		{
			get
			{
				return this._Event_BookAcquisitions;
			}
			set
			{
				this._Event_BookAcquisitions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Book_Event_BookDeletion", Storage="_Event_BookDeletions", ThisKey="BookId", OtherKey="BookId")]
		public EntitySet<Event_BookDeletion> Event_BookDeletions
		{
			get
			{
				return this._Event_BookDeletions;
			}
			set
			{
				this._Event_BookDeletions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Book_Event_RentsReturn", Storage="_Event_RentsReturns", ThisKey="BookId", OtherKey="BookId")]
		public EntitySet<Event_RentsReturn> Event_RentsReturns
		{
			get
			{
				return this._Event_RentsReturns;
			}
			set
			{
				this._Event_RentsReturns.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Event_BookAcquisitions(Event_BookAcquisition entity)
		{
			this.SendPropertyChanging();
			entity.Book = this;
		}
		
		private void detach_Event_BookAcquisitions(Event_BookAcquisition entity)
		{
			this.SendPropertyChanging();
			entity.Book = null;
		}
		
		private void attach_Event_BookDeletions(Event_BookDeletion entity)
		{
			this.SendPropertyChanging();
			entity.Book = this;
		}
		
		private void detach_Event_BookDeletions(Event_BookDeletion entity)
		{
			this.SendPropertyChanging();
			entity.Book = null;
		}
		
		private void attach_Event_RentsReturns(Event_RentsReturn entity)
		{
			this.SendPropertyChanging();
			entity.Book = this;
		}
		
		private void detach_Event_RentsReturns(Event_RentsReturn entity)
		{
			this.SendPropertyChanging();
			entity.Book = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Employees")]
	public partial class Employee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EmployeeId;
		
		private string _Name;
		
		private string _Surname;
		
		private string _Address;
		
		private string _PhoneNumber;
		
		private string _Email;
		
		private EntitySet<Event_BookAcquisition> _Event_BookAcquisitions;
		
		private EntitySet<Event_BookDeletion> _Event_BookDeletions;
		
		private EntitySet<Event_RentsReturn> _Event_RentsReturns;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployeeIdChanging(int value);
    partial void OnEmployeeIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSurnameChanging(string value);
    partial void OnSurnameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
		
		public Employee()
		{
			this._Event_BookAcquisitions = new EntitySet<Event_BookAcquisition>(new Action<Event_BookAcquisition>(this.attach_Event_BookAcquisitions), new Action<Event_BookAcquisition>(this.detach_Event_BookAcquisitions));
			this._Event_BookDeletions = new EntitySet<Event_BookDeletion>(new Action<Event_BookDeletion>(this.attach_Event_BookDeletions), new Action<Event_BookDeletion>(this.detach_Event_BookDeletions));
			this._Event_RentsReturns = new EntitySet<Event_RentsReturn>(new Action<Event_RentsReturn>(this.attach_Event_RentsReturns), new Action<Event_RentsReturn>(this.detach_Event_RentsReturns));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int EmployeeId
		{
			get
			{
				return this._EmployeeId;
			}
			set
			{
				if ((this._EmployeeId != value))
				{
					this.OnEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeId = value;
					this.SendPropertyChanged("EmployeeId");
					this.OnEmployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Surname", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Surname
		{
			get
			{
				return this._Surname;
			}
			set
			{
				if ((this._Surname != value))
				{
					this.OnSurnameChanging(value);
					this.SendPropertyChanging();
					this._Surname = value;
					this.SendPropertyChanged("Surname");
					this.OnSurnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Event_BookAcquisition", Storage="_Event_BookAcquisitions", ThisKey="EmployeeId", OtherKey="EmployeeId")]
		public EntitySet<Event_BookAcquisition> Event_BookAcquisitions
		{
			get
			{
				return this._Event_BookAcquisitions;
			}
			set
			{
				this._Event_BookAcquisitions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Event_BookDeletion", Storage="_Event_BookDeletions", ThisKey="EmployeeId", OtherKey="EmployeeId")]
		public EntitySet<Event_BookDeletion> Event_BookDeletions
		{
			get
			{
				return this._Event_BookDeletions;
			}
			set
			{
				this._Event_BookDeletions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Event_RentsReturn", Storage="_Event_RentsReturns", ThisKey="EmployeeId", OtherKey="EmployeeId")]
		public EntitySet<Event_RentsReturn> Event_RentsReturns
		{
			get
			{
				return this._Event_RentsReturns;
			}
			set
			{
				this._Event_RentsReturns.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Event_BookAcquisitions(Event_BookAcquisition entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_Event_BookAcquisitions(Event_BookAcquisition entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_Event_BookDeletions(Event_BookDeletion entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_Event_BookDeletions(Event_BookDeletion entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_Event_RentsReturns(Event_RentsReturn entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_Event_RentsReturns(Event_RentsReturn entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Event_BookAcquisitions")]
	public partial class Event_BookAcquisition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AcquisitionId;
		
		private string _BookId;
		
		private int _EmployeeId;
		
		private int _ReaderId;
		
		private int _SupplierId;
		
		private System.DateTime _Timestamp;
		
		private EntityRef<IBook> _Book;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<Reader> _Reader;
		
		private EntityRef<Supplier> _Supplier;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAcquisitionIdChanging(int value);
    partial void OnAcquisitionIdChanged();
    partial void OnBookIdChanging(string value);
    partial void OnBookIdChanged();
    partial void OnEmployeeIdChanging(int value);
    partial void OnEmployeeIdChanged();
    partial void OnReaderIdChanging(int value);
    partial void OnReaderIdChanged();
    partial void OnSupplierIdChanging(int value);
    partial void OnSupplierIdChanged();
    partial void OnTimestampChanging(System.DateTime value);
    partial void OnTimestampChanged();
    #endregion
		
		public Event_BookAcquisition()
		{
			this._Book = default(EntityRef<IBook>);
			this._Employee = default(EntityRef<Employee>);
			this._Reader = default(EntityRef<Reader>);
			this._Supplier = default(EntityRef<Supplier>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcquisitionId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AcquisitionId
		{
			get
			{
				return this._AcquisitionId;
			}
			set
			{
				if ((this._AcquisitionId != value))
				{
					this.OnAcquisitionIdChanging(value);
					this.SendPropertyChanging();
					this._AcquisitionId = value;
					this.SendPropertyChanged("AcquisitionId");
					this.OnAcquisitionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookId", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string BookId
		{
			get
			{
				return this._BookId;
			}
			set
			{
				if ((this._BookId != value))
				{
					if (this._Book.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBookIdChanging(value);
					this.SendPropertyChanging();
					this._BookId = value;
					this.SendPropertyChanged("BookId");
					this.OnBookIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeId", DbType="Int NOT NULL")]
		public int EmployeeId
		{
			get
			{
				return this._EmployeeId;
			}
			set
			{
				if ((this._EmployeeId != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeId = value;
					this.SendPropertyChanged("EmployeeId");
					this.OnEmployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReaderId", DbType="Int NOT NULL")]
		public int ReaderId
		{
			get
			{
				return this._ReaderId;
			}
			set
			{
				if ((this._ReaderId != value))
				{
					if (this._Reader.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReaderIdChanging(value);
					this.SendPropertyChanging();
					this._ReaderId = value;
					this.SendPropertyChanged("ReaderId");
					this.OnReaderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierId", DbType="Int NOT NULL")]
		public int SupplierId
		{
			get
			{
				return this._SupplierId;
			}
			set
			{
				if ((this._SupplierId != value))
				{
					if (this._Supplier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupplierIdChanging(value);
					this.SendPropertyChanging();
					this._SupplierId = value;
					this.SendPropertyChanged("SupplierId");
					this.OnSupplierIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Timestamp", DbType="DateTime NOT NULL")]
		public System.DateTime Timestamp
		{
			get
			{
				return this._Timestamp;
			}
			set
			{
				if ((this._Timestamp != value))
				{
					this.OnTimestampChanging(value);
					this.SendPropertyChanging();
					this._Timestamp = value;
					this.SendPropertyChanged("Timestamp");
					this.OnTimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Book_Event_BookAcquisition", Storage="_Book", ThisKey="BookId", OtherKey="BookId", IsForeignKey=true)]
		public IBook Book
		{
			get
			{
				return this._Book.Entity;
			}
			set
			{
				IBook previousValue = this._Book.Entity;
				if (((previousValue != value) 
							|| (this._Book.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Book.Entity = null;
						previousValue.Event_BookAcquisitions.Remove(this);
					}
					this._Book.Entity = value;
					if ((value != null))
					{
						value.Event_BookAcquisitions.Add(this);
						this._BookId = value.BookId;
					}
					else
					{
						this._BookId = default(string);
					}
					this.SendPropertyChanged("Book");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Event_BookAcquisition", Storage="_Employee", ThisKey="EmployeeId", OtherKey="EmployeeId", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.Event_BookAcquisitions.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.Event_BookAcquisitions.Add(this);
						this._EmployeeId = value.EmployeeId;
					}
					else
					{
						this._EmployeeId = default(int);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Reader_Event_BookAcquisition", Storage="_Reader", ThisKey="ReaderId", OtherKey="ReaderId", IsForeignKey=true)]
		public Reader Reader
		{
			get
			{
				return this._Reader.Entity;
			}
			set
			{
				Reader previousValue = this._Reader.Entity;
				if (((previousValue != value) 
							|| (this._Reader.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Reader.Entity = null;
						previousValue.Event_BookAcquisitions.Remove(this);
					}
					this._Reader.Entity = value;
					if ((value != null))
					{
						value.Event_BookAcquisitions.Add(this);
						this._ReaderId = value.ReaderId;
					}
					else
					{
						this._ReaderId = default(int);
					}
					this.SendPropertyChanged("Reader");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_Event_BookAcquisition", Storage="_Supplier", ThisKey="SupplierId", OtherKey="SupplierId", IsForeignKey=true)]
		public Supplier Supplier
		{
			get
			{
				return this._Supplier.Entity;
			}
			set
			{
				Supplier previousValue = this._Supplier.Entity;
				if (((previousValue != value) 
							|| (this._Supplier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Supplier.Entity = null;
						previousValue.Event_BookAcquisitions.Remove(this);
					}
					this._Supplier.Entity = value;
					if ((value != null))
					{
						value.Event_BookAcquisitions.Add(this);
						this._SupplierId = value.SupplierId;
					}
					else
					{
						this._SupplierId = default(int);
					}
					this.SendPropertyChanged("Supplier");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Event_BookDeletions")]
	public partial class Event_BookDeletion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BookDeletionId;
		
		private string _BookId;
		
		private int _EmployeeId;
		
		private System.DateTime _Timestamp;
		
		private EntityRef<IBook> _Book;
		
		private EntityRef<Employee> _Employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBookDeletionIdChanging(int value);
    partial void OnBookDeletionIdChanged();
    partial void OnBookIdChanging(string value);
    partial void OnBookIdChanged();
    partial void OnEmployeeIdChanging(int value);
    partial void OnEmployeeIdChanged();
    partial void OnTimestampChanging(System.DateTime value);
    partial void OnTimestampChanged();
    #endregion
		
		public Event_BookDeletion()
		{
			this._Book = default(EntityRef<IBook>);
			this._Employee = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookDeletionId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int BookDeletionId
		{
			get
			{
				return this._BookDeletionId;
			}
			set
			{
				if ((this._BookDeletionId != value))
				{
					this.OnBookDeletionIdChanging(value);
					this.SendPropertyChanging();
					this._BookDeletionId = value;
					this.SendPropertyChanged("BookDeletionId");
					this.OnBookDeletionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookId", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string BookId
		{
			get
			{
				return this._BookId;
			}
			set
			{
				if ((this._BookId != value))
				{
					if (this._Book.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBookIdChanging(value);
					this.SendPropertyChanging();
					this._BookId = value;
					this.SendPropertyChanged("BookId");
					this.OnBookIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeId", DbType="Int NOT NULL")]
		public int EmployeeId
		{
			get
			{
				return this._EmployeeId;
			}
			set
			{
				if ((this._EmployeeId != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeId = value;
					this.SendPropertyChanged("EmployeeId");
					this.OnEmployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Timestamp", DbType="DateTime NOT NULL")]
		public System.DateTime Timestamp
		{
			get
			{
				return this._Timestamp;
			}
			set
			{
				if ((this._Timestamp != value))
				{
					this.OnTimestampChanging(value);
					this.SendPropertyChanging();
					this._Timestamp = value;
					this.SendPropertyChanged("Timestamp");
					this.OnTimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Book_Event_BookDeletion", Storage="_Book", ThisKey="BookId", OtherKey="BookId", IsForeignKey=true)]
		public IBook Book
		{
			get
			{
				return this._Book.Entity;
			}
			set
			{
				IBook previousValue = this._Book.Entity;
				if (((previousValue != value) 
							|| (this._Book.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Book.Entity = null;
						previousValue.Event_BookDeletions.Remove(this);
					}
					this._Book.Entity = value;
					if ((value != null))
					{
						value.Event_BookDeletions.Add(this);
						this._BookId = value.BookId;
					}
					else
					{
						this._BookId = default(string);
					}
					this.SendPropertyChanged("Book");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Event_BookDeletion", Storage="_Employee", ThisKey="EmployeeId", OtherKey="EmployeeId", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.Event_BookDeletions.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.Event_BookDeletions.Add(this);
						this._EmployeeId = value.EmployeeId;
					}
					else
					{
						this._EmployeeId = default(int);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Event_RentsReturns")]
	public partial class Event_RentsReturn : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RentReturnId;
		
		private string _BookId;
		
		private int _EmployeeId;
		
		private int _ReaderId;
		
		private System.DateTime _Timestamp;
		
		private string _Rent_Return;
		
		private EntityRef<IBook> _Book;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<Reader> _Reader;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRentReturnIdChanging(int value);
    partial void OnRentReturnIdChanged();
    partial void OnBookIdChanging(string value);
    partial void OnBookIdChanged();
    partial void OnEmployeeIdChanging(int value);
    partial void OnEmployeeIdChanged();
    partial void OnReaderIdChanging(int value);
    partial void OnReaderIdChanged();
    partial void OnTimestampChanging(System.DateTime value);
    partial void OnTimestampChanged();
    partial void OnRent_ReturnChanging(string value);
    partial void OnRent_ReturnChanged();
    #endregion
		
		public Event_RentsReturn()
		{
			this._Book = default(EntityRef<IBook>);
			this._Employee = default(EntityRef<Employee>);
			this._Reader = default(EntityRef<Reader>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RentReturnId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RentReturnId
		{
			get
			{
				return this._RentReturnId;
			}
			set
			{
				if ((this._RentReturnId != value))
				{
					this.OnRentReturnIdChanging(value);
					this.SendPropertyChanging();
					this._RentReturnId = value;
					this.SendPropertyChanged("RentReturnId");
					this.OnRentReturnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookId", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string BookId
		{
			get
			{
				return this._BookId;
			}
			set
			{
				if ((this._BookId != value))
				{
					if (this._Book.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBookIdChanging(value);
					this.SendPropertyChanging();
					this._BookId = value;
					this.SendPropertyChanged("BookId");
					this.OnBookIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeId", DbType="Int NOT NULL")]
		public int EmployeeId
		{
			get
			{
				return this._EmployeeId;
			}
			set
			{
				if ((this._EmployeeId != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeId = value;
					this.SendPropertyChanged("EmployeeId");
					this.OnEmployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReaderId", DbType="Int NOT NULL")]
		public int ReaderId
		{
			get
			{
				return this._ReaderId;
			}
			set
			{
				if ((this._ReaderId != value))
				{
					if (this._Reader.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReaderIdChanging(value);
					this.SendPropertyChanging();
					this._ReaderId = value;
					this.SendPropertyChanged("ReaderId");
					this.OnReaderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Timestamp", DbType="DateTime NOT NULL")]
		public System.DateTime Timestamp
		{
			get
			{
				return this._Timestamp;
			}
			set
			{
				if ((this._Timestamp != value))
				{
					this.OnTimestampChanging(value);
					this.SendPropertyChanging();
					this._Timestamp = value;
					this.SendPropertyChanged("Timestamp");
					this.OnTimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Rent/Return]", Storage="_Rent_Return", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string Rent_Return
		{
			get
			{
				return this._Rent_Return;
			}
			set
			{
				if ((this._Rent_Return != value))
				{
					this.OnRent_ReturnChanging(value);
					this.SendPropertyChanging();
					this._Rent_Return = value;
					this.SendPropertyChanged("Rent_Return");
					this.OnRent_ReturnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Book_Event_RentsReturn", Storage="_Book", ThisKey="BookId", OtherKey="BookId", IsForeignKey=true)]
		public IBook Book
		{
			get
			{
				return this._Book.Entity;
			}
			set
			{
				IBook previousValue = this._Book.Entity;
				if (((previousValue != value) 
							|| (this._Book.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Book.Entity = null;
						previousValue.Event_RentsReturns.Remove(this);
					}
					this._Book.Entity = value;
					if ((value != null))
					{
						value.Event_RentsReturns.Add(this);
						this._BookId = value.BookId;
					}
					else
					{
						this._BookId = default(string);
					}
					this.SendPropertyChanged("Book");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Event_RentsReturn", Storage="_Employee", ThisKey="EmployeeId", OtherKey="EmployeeId", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.Event_RentsReturns.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.Event_RentsReturns.Add(this);
						this._EmployeeId = value.EmployeeId;
					}
					else
					{
						this._EmployeeId = default(int);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Reader_Event_RentsReturn", Storage="_Reader", ThisKey="ReaderId", OtherKey="ReaderId", IsForeignKey=true)]
		public Reader Reader
		{
			get
			{
				return this._Reader.Entity;
			}
			set
			{
				Reader previousValue = this._Reader.Entity;
				if (((previousValue != value) 
							|| (this._Reader.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Reader.Entity = null;
						previousValue.Event_RentsReturns.Remove(this);
					}
					this._Reader.Entity = value;
					if ((value != null))
					{
						value.Event_RentsReturns.Add(this);
						this._ReaderId = value.ReaderId;
					}
					else
					{
						this._ReaderId = default(int);
					}
					this.SendPropertyChanged("Reader");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Readers")]
	public partial class Reader : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ReaderId;
		
		private string _Name;
		
		private string _Surname;
		
		private string _Address;
		
		private string _PhoneNumber;
		
		private string _Email;
		
		private EntitySet<Event_BookAcquisition> _Event_BookAcquisitions;
		
		private EntitySet<Event_RentsReturn> _Event_RentsReturns;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReaderIdChanging(int value);
    partial void OnReaderIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSurnameChanging(string value);
    partial void OnSurnameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
		
		public Reader()
		{
			this._Event_BookAcquisitions = new EntitySet<Event_BookAcquisition>(new Action<Event_BookAcquisition>(this.attach_Event_BookAcquisitions), new Action<Event_BookAcquisition>(this.detach_Event_BookAcquisitions));
			this._Event_RentsReturns = new EntitySet<Event_RentsReturn>(new Action<Event_RentsReturn>(this.attach_Event_RentsReturns), new Action<Event_RentsReturn>(this.detach_Event_RentsReturns));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReaderId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ReaderId
		{
			get
			{
				return this._ReaderId;
			}
			set
			{
				if ((this._ReaderId != value))
				{
					this.OnReaderIdChanging(value);
					this.SendPropertyChanging();
					this._ReaderId = value;
					this.SendPropertyChanged("ReaderId");
					this.OnReaderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Surname", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Surname
		{
			get
			{
				return this._Surname;
			}
			set
			{
				if ((this._Surname != value))
				{
					this.OnSurnameChanging(value);
					this.SendPropertyChanging();
					this._Surname = value;
					this.SendPropertyChanged("Surname");
					this.OnSurnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Reader_Event_BookAcquisition", Storage="_Event_BookAcquisitions", ThisKey="ReaderId", OtherKey="ReaderId")]
		public EntitySet<Event_BookAcquisition> Event_BookAcquisitions
		{
			get
			{
				return this._Event_BookAcquisitions;
			}
			set
			{
				this._Event_BookAcquisitions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Reader_Event_RentsReturn", Storage="_Event_RentsReturns", ThisKey="ReaderId", OtherKey="ReaderId")]
		public EntitySet<Event_RentsReturn> Event_RentsReturns
		{
			get
			{
				return this._Event_RentsReturns;
			}
			set
			{
				this._Event_RentsReturns.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Event_BookAcquisitions(Event_BookAcquisition entity)
		{
			this.SendPropertyChanging();
			entity.Reader = this;
		}
		
		private void detach_Event_BookAcquisitions(Event_BookAcquisition entity)
		{
			this.SendPropertyChanging();
			entity.Reader = null;
		}
		
		private void attach_Event_RentsReturns(Event_RentsReturn entity)
		{
			this.SendPropertyChanging();
			entity.Reader = this;
		}
		
		private void detach_Event_RentsReturns(Event_RentsReturn entity)
		{
			this.SendPropertyChanging();
			entity.Reader = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Suppliers")]
	public partial class Supplier : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SupplierId;
		
		private string _Name;
		
		private string _Address;
		
		private string _PhoneNumber;
		
		private string _Email;
		
		private EntitySet<Event_BookAcquisition> _Event_BookAcquisitions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSupplierIdChanging(int value);
    partial void OnSupplierIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
		
		public Supplier()
		{
			this._Event_BookAcquisitions = new EntitySet<Event_BookAcquisition>(new Action<Event_BookAcquisition>(this.attach_Event_BookAcquisitions), new Action<Event_BookAcquisition>(this.detach_Event_BookAcquisitions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SupplierId
		{
			get
			{
				return this._SupplierId;
			}
			set
			{
				if ((this._SupplierId != value))
				{
					this.OnSupplierIdChanging(value);
					this.SendPropertyChanging();
					this._SupplierId = value;
					this.SendPropertyChanged("SupplierId");
					this.OnSupplierIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_Event_BookAcquisition", Storage="_Event_BookAcquisitions", ThisKey="SupplierId", OtherKey="SupplierId")]
		public EntitySet<Event_BookAcquisition> Event_BookAcquisitions
		{
			get
			{
				return this._Event_BookAcquisitions;
			}
			set
			{
				this._Event_BookAcquisitions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Event_BookAcquisitions(Event_BookAcquisition entity)
		{
			this.SendPropertyChanging();
			entity.Supplier = this;
		}
		
		private void detach_Event_BookAcquisitions(Event_BookAcquisition entity)
		{
			this.SendPropertyChanging();
			entity.Supplier = null;
		}
	}
}
#pragma warning restore 1591
